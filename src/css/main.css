@charset "UTF-8";
.main-header {
  position: relative;
}
.main-header::after {
  content: "";
  position: absolute;
  z-index: 100;
  width: 100%;
  height: calc(var(--font-index) * 10);
  background-image: url(../../img/ground.png);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  bottom: calc(var(--font-index) * -4.5);
}

.layers {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
  position: relative;
}

.layer {
  height: 100%;
  width: 100%;
  position: absolute;
  background-size: cover;
  background-position: center;
  will-change: transform;
  z-index: 2;
  transition: var(--transition);
}

/**
	with vars translate3d(0, 0, 0) it has the same behaviour as without, but if y-dimension
	while scrolling will be dynamically changed on the same value on which have been scrolled it returns
	Exm. scrolling â†“ on 50px and @var --scrollTop is also 50px, then translateY(var(--scrollTop))
 */
.layers__base {
  transform: translate3d(0, calc(var(--scrollTop) / 1.6), 0);
  z-index: 0;
}

.layers__middle {
  transform: translate3d(0, calc(var(--scrollTop) / 2.5), 0);
}

.layers__front {
  transform: translate3d(0, calc(var(--scrollTop) / 5.7), 0);
}

.layer__header {
  z-index: 1;
  transform: translate3d(0, calc(var(--scrollTop) / 2), 0);
  transition: var(--transition);
  will-change: transform;
  text-transform: uppercase;
  font-weight: 900;
  margin-top: calc(var(--font-index) * -6.5);
  color: #e7e7e0;
  text-shadow: 0 0 15px #c79b2f;
  width: 60%;
  max-width: 720px;
}

.layers__caption {
  font-size: calc(var(--font-index) * 0.9);
  letter-spacing: calc(var(--font-index) / 3.5);
}

.layers__title {
  font-size: calc(var(--font-index) * 2.5);
  letter-spacing: calc(var(--font-index) / 2.25);
}

.main-article {
  --main-article-transform: translate3d(0, calc(var(--scrollTop / -7.5)), 0);
  min-height: 100vh;
  background-size: cover;
  background-position: center;
  color: #e7e7e0;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  position: relative;
}

.main-article__header {
  text-transform: uppercase;
  font-size: calc(var(--font-index) * 1.8);
  letter-spacing: calc(var(--font-index) / 7.5);
  transform: var(--main-article-transform);
  transition: var(--transition);
  will-change: transform;
}

.main-article__paragraph {
  max-width: calc(var(--font-index) * 30);
  font-size: calc(var(--font-index) * 0.9);
  margin-top: calc(var(--font-index) / 1.25);
  transform: var(--main-article-transform);
  transition: var(--transition);
  will-change: transform;
}

.copy {
  position: absolute;
  bottom: calc(var(--font-index) * 2.5);
  opacity: 45%;
  font-size: calc(var(--font-index) * 0.75);
  letter-spacing: calc(var(--font-index) / 37.5);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --font-index: calc(1vw + 1vh);
  --transition: transform .75s cubic-bezier(.075, .5, 0, 1);
}

@font-face {
  font-family: raleway_f;
  src: url(../../fonts/raleway-regular.woff2) format("woff2");
}
@font-face {
  font-family: raleway_f;
  src: url(../../fonts/raleway-black.woff2) format("woff2");
  font-weight: 900;
}
body {
  background: #010101;
  font-family: raleway_f, sans-serif;
  line-height: 1.55;
}

.content {
  will-change: transform;
}

/*# sourceMappingURL=main.css.map */
